// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt 
  accounts      Account[]
  watchlists    Watchlist[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Watchlist {
  id            String   @id @default(cuid())
  tmdbId        Int      // TMDB ID for the media
  mediaType     String   // Type of the media, e.g., movie or tv
  title         String   // Title of the movie or name of the TV show
  releaseDate   String?  // Release date or first air date
  tmdbRating    Float?   // TMDB rating (vote average)
  genres        String?  // List of Genres with comma
  watchStatus   String   // Status, e.g., "list", "watching", "watched"
  overview      String?  // Overview of the media
  posterImage   String?  // Path to the poster image
  backdropImage String?  // Path to the backdrop image
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  userId        String
  user          User @relation(fields: [userId], references: [id])

  @@unique([userId, tmdbId])
}

